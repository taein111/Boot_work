!! 댓글 삭제하기 !!

1. 요청을 받아 응답할 컨트롤러 만들기 (DELETE 매핑)
2. 컨트롤러는 서비스에 삭제 작업을 위임하고 서비스가 반환한 결과, 즉 삭제된 댓글을
클라이언트에 응답한다. 
3. 댓글 삭제를 서비스에 위임하기 위해 CommentService의 delete(id) 메서드 호출, 반환받은 결과는
CommentDto 타입의 deleteDto 라는 변수에 저장한다.


  @DeleteMapping("/api/comments/{id}")
    public ResponseEntity<CommentDto> delete(@PathVariable Long id){
        //서비스에 위임
        CommentDto deleteDto = commentService.delete(id); // id(번호)를 받아와 삭제한다, 결과를 CommentDto 타입의 deleteDto 변수에 저장한다
        log.info(deleteDto.toString());
        //결과 응답
        return ResponseEntity.status(HttpStatus.OK).body(deleteDto);
    }


4. 요청을 처리할 서비스 만들기
  1) db에서 해당 댓글을 조회해 가져오고 없을 경우 예외 발생시키기
  2) 가져온 댓글을 db에서 삭제하기
  3) 삭제한 댓글을 dto로 변환해 반환하기

 @Transactional
    public CommentDto delete(Long id) {
        //1.댓글 조회 및 예외발생
        Comment target = commentRepository.findById(id)//삭제할 댓글 가져오기
                .orElseThrow(() -> new IllegalArgumentException("댓글 삭제 실패, 삭제 대상이 없습니다"));
        //2. 댓글 삭제
        commentRepository.delete(target);
        //3. 삭제 댓글을 dto로 변환 및 반환
        return CommentDto.createCommentDto(target);
    }



